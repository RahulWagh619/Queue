#include <bits/stdc++.h>
using namespace std;

class CirQueue {
public:
    int *arr;  
    int size; 
    int front; 
    int rear;  

    CirQueue(int size) {
        this->size = size;
        arr = new int[size];
        front = -1;
        rear = -1;
    }

   
    void push(int data) {
        if ((rear + 1 == front) || (rear + 1 == size && front == 0)) {
            cout << "Queue is full" << endl; 
        } else if (front == -1) {
            front = rear = 0;
            arr[rear] = data;
        } else if (rear == size - 1 && front != 0) {
            rear = 0;
            arr[rear] = data;
        } else {
            rear++;
            arr[rear] = data;
        }
    }

    void pop() {
        if (front == -1) {
            cout << "Queue is empty" << endl; 
        } else if (front == rear) {
            front = rear = -1;
        } else if (front == size - 1) {
            front = 0;
        } else {
            front++;
        }
    }
     int getFront() {
        if (front == -1) {
            cout << "Queue is empty" << endl;
            return -1; 
        } else {
            return arr[front];
        }
    }

    int getRear() {
        if (rear == -1) {
            cout << "Queue is empty" << endl;
            return -1; 
        } else {
            return arr[rear];
        }
    }
};

int main() {
    CirQueue q(5);

    q.push(10);
    q.push(20);
    q.push(30);
    q.push(40);
    q.push(50); 

    q.pop(); 
    q.pop(); 

    q.push(60); 
    q.push(70); 
    cout << q.getFront() << endl;
    cout << q.getRear() << endl;

    return 0;
}
