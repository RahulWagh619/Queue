#include <bits/stdc++.h>
using namespace std;

class Deque {
public:
    int *arr;  
    int size; 
    int front; 
    int rear;  

    Deque(int size) {
        this->size = size;
        arr = new int[size];
        front = -1;
        rear = -1;
    }

    // Push element to the rear
    void pushrear(int data) {
        if ((rear + 1 == front) || (rear + 1 == size && front == 0)) {
            cout << "Deque is full" << endl; 
        } else if (front == -1) {
            front = rear = 0;
            arr[rear] = data;
        } else if (rear == size - 1 && front != 0) {
            rear = 0;
            arr[rear] = data;
        } else {
            rear++;
            arr[rear] = data;
        }
    }

    // Push element to the front
    void pushfront(int data) {
        if ((rear + 1 == front) || (rear + 1 == size && front == 0)) {
            cout << "Deque is full" << endl; 
        } else if (front == -1) {
            front = rear = 0;
            arr[front] = data;
        } else if (front == 0) {
            front = size - 1;
            arr[front] = data;
        } else {
            front--;
            arr[front] = data;
        }
    }

    // Pop element from the front
    void popfront() {
        if (front == -1) {
            cout << "Deque is empty" << endl; 
        } else if (front == rear) {
            front = rear = -1; 
        } else if (front == size - 1) {
            front = 0; 
        } else {
            front++;
        }
    }

    // Pop element from the rear
    void poprear() {
        if (front == -1) {
            cout << "Deque is empty" << endl; 
        } else if (front == rear) {
            front = rear = -1; 
        } else if (rear == 0) {
            rear = size - 1; 
        } else {
            rear--;
        }
    }

    // Get the front element
    int getFront() {
        if (front == -1) {
            cout << "Deque is empty" << endl;
            return -1; 
        } else {
            return arr[front];
        }
    }

    // Get the rear element
    int getRear() {
        if (rear == -1) {
            cout << "Deque is empty" << endl;
            return -1; 
        } else {
            return arr[rear];
        }
    }
};

int main() {
    Deque q(5);

    q.pushrear(10);
    q.pushrear(20);
    q.pushrear(30);
    q.pushrear(40);
    q.pushrear(50); 
    q.popfront(); 
    q.popfront(); 

    q.pushrear(60); 
    q.pushrear(70);

    cout << "Front element: " << q.getFront() << endl; 
    cout << "Rear element: " << q.getRear() << endl;

    q.pushfront(80); 
    cout << "Front element after pushfront: " << q.getFront() << endl; 
    q.poprear(); 
    cout << "Rear element after poprear: " << q.getRear() << endl; 

    return 0;
}
